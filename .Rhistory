dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=81 & dust_data_soup$Fine.dust <=150] <- 'bad'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=151 ] <- 'very bad'
dust_data_soup
table(dust_data_soup$month, dust_data_soup$Fine.dust2)
plot(dust_data_soup[dust_data_soup$month=='01'])
plot(dust_data_soup[dust_data_soup$month == '01'])
dust_data_soup$month == '01'
plot(dust_data_soup$Fine.dust[dust_data_soup$month == '01'])
hist(dust_data_soup$Fine.dust[dust_data_soup$month == '01'])
hist(dust_data_soup$Fine.dust[dust_data_soup$month == '08'])
hist(dust_data_soup$Fine.dust[dust_data_soup$month == '01'])
hist(dust_data_soup$Fine.dust[dust_data_soup$month == '08'])
hist(dust_data_soup$Fine.dust[dust_data_soup$month == '01'])
hist(dust_data_soup$Fine.dust[dust_data_soup$month == '08'])
hist(dust_data_soup$Fine.dust[dust_data_soup$month == '01'])
hist(dust_data_soup$Fine.dust[dust_data_soup$month == '08'])
hist(dust_data_soup$Fine.dust[dust_data_soup$month == '01'])
shapiro.test(dust_data_soup$Fine.dust[dust_data_soup$month == '01'])
shapiro.test(dust_data_soup$Fine.dust[dust_data_soup$month == '08'])
t.test(dust_data_soup$Fine.dust[dust_data_soup$month == '01'], dust_data_soup$Fine.dust[dust_data_soup$month == '08'], alternative = "two.sided")
jan <- dust_data_soup$Fine.dust[dust_data_soup$month == '01']
shapiro.test(jan)
aug <- dust_data_soup$Fine.dust[dust_data_soup$month == '08']
shapiro.test(aug)
t.test(jan, aug, alternative = "two.sided")
t.test(jan, aug, alternative = "greter")
t.test(jan, aug, alternative = "greater")
t.test(jan, aug, alternative = "less")
CrossTable(dust_data_soup$month, dust_data_soup$Fine.dust2, chisq = TRUE)
library(gmodels)
CrossTable(dust_data_soup$month, dust_data_soup$Fine.dust2, chisq = TRUE)
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust <=30] <- 'good'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=31 & dust_data_soup$Fine.dust <=80] <- 'normal'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=81 & dust_data_soup$Fine.dust <=150] <- 'bad'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=151 ] <- 'bad'
CrossTable(dust_data_soup$month, dust_data_soup$Fine.dust2, chisq = TRUE)
month <- dust_data_soup$month
finedust<- dust_data_soup$Fine.dust2
CrossTable(month, finedist, chisq = TRUE)
CrossTable(month, finedust, chisq = TRUE)
table(month, finedust)
CrossTable(month, finedust, chisq = TRUE)
dust_data_soup
is.na(dust_data_soup)
count(is.na(dust_data_soup))
sum(is.na(dust_data_soup))
dust_data_soup <- na.omit(dust_data_soup)
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust <=30] <- 'good'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=31 & dust_data_soup$Fine.dust <=80] <- 'normal'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=81 & dust_data_soup$Fine.dust <=150] <- 'bad'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=151 ] <- 'bad'
dust_data_soup
table(dust_data_soup$month, dust_data_soup$Fine.dust2)
jan <- dust_data_soup$Fine.dust[dust_data_soup$month == '01']
shapiro.test(jan)
aug <- dust_data_soup$Fine.dust[dust_data_soup$month == '08']
shapiro.test(aug)
t.test(jan, aug, alternative = "two.sided")
t.test(jan, aug, alternative = "greater")
t.test(jan, aug, alternative = "less")
library(gmodels)
month <- dust_data_soup$month
finedust<- dust_data_soup$Fine.dust2
table(month, finedust)
CrossTable(month, finedust, chisq = TRUE)
hist(dust_data_soup$Fine.dust[dust_data_soup$month=='01'])
hist(dust_data_soup$Fine.dust[dust_data_soup$month=='08'])
dust_data <- read.csv("./dust_seoul.csv", header = TRUE)
head(dust_data)
summary(dust_data)
#Extract monthly info into the month column (substr())
dust_data$month <- substr(dust_data[,1], 5,6)
unique(dust_data$month)
#filter by month for 01, 08 (%in%)
dust_data_18 <- subset(dust_data, dust_data$month %in% c('01', '08') )
length(dust_data_18)
dust_data_18
names(dust_data_18) <- c("date","station","Co2.ppm", "Ozone.ppm", "Co.ppm", "SO3.ppm", "Fine.dust", "Ultrafine.dust","month")
dust_data_soup <- dust_data_18[,c("month","Fine.dust","Ultrafine.dust")]
dust_data_soup <- na.omit(dust_data_soup)
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust <=30] <- 'good'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=31 & dust_data_soup$Fine.dust <=80] <- 'normal'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=81 & dust_data_soup$Fine.dust <=150] <- 'bad'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=151 ] <- 'bad'
dust_data_soup
table(dust_data_soup$month, dust_data_soup$Fine.dust2)
jan <- dust_data_soup$Fine.dust[dust_data_soup$month == '01']
shapiro.test(jan)
aug <- dust_data_soup$Fine.dust[dust_data_soup$month == '08']
shapiro.test(aug)
t.test(jan, aug, alternative = "two.sided")
t.test(jan, aug, alternative = "greater")
t.test(jan, aug, alternative = "less")
library(gmodels)
month <- dust_data_soup$month
finedust<- dust_data_soup$Fine.dust2
table(month, finedust)
CrossTable(month, finedust, chisq = TRUE)
#load data. Used opendata in seoul-si
#level of finedust by month, localarea
dust_data <- read.csv("./dust_seoul.csv", header = TRUE)
head(dust_data)
summary(dust_data)
#load data. Used opendata in seoul-si
#level of finedust by month, localarea
dust_data <- read.csv("./dust_seoul.csv", header = TRUE)
head(dust_data)
summary(dust_data)
#load data. Used opendata in seoul-si
#level of finedust by month, localarea
dust_data <- read.csv("./dust_seoul.csv", header = TRUE)
head(dust_data)
summary(dust_data)
#Extract monthly info into the month column (substr())
dust_data$month <- substr(dust_data[,1], 5,6)
unique(dust_data$month)
names(dust_data) <- c("date","station","Co2.ppm", "Ozone.ppm", "Co.ppm", "SO3.ppm", "Fine.dust", "Ultrafine.dust","month")
#filter by month for 01, 08 (%in%)
dust_data_18 <- subset(dust_data, dust_data$month %in% c('01', '08') )
length(dust_data_18)
dust_data_18
dust_data_soup <- dust_data_18[,c("month","Fine.dust","Ultrafine.dust")]
dust_data_soup <- na.omit(dust_data_soup)
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust <=30] <- 'good'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=31 & dust_data_soup$Fine.dust <=80] <- 'normal'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=81 & dust_data_soup$Fine.dust <=150] <- 'bad'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=151 ] <- 'bad'
dust_data_soup
library(gmodels)
month <- dust_data_soup$month
finedust<- dust_data_soup$Fine.dust2
table(month, finedust)
CrossTable(month, finedust, chisq = TRUE)
qqnorm(jan)
qqline(jan, lty=1, col="blue")
qqnorm(aug)
qqline(aug, lty = 1, col = 'red')
jan <- dust_data_soup$Fine.dust[dust_data_soup$month == '01']
shapiro.test(jan)
aug <- dust_data_soup$Fine.dust[dust_data_soup$month == '08']
#Regularity Test
shapiro.test(aug)
#Q-Q plot(Quantile)
qqnorm(jan)
qqline(jan, lty=1, col="blue")
qqnorm(aug)
qqline(aug, lty = 1, col = 'red')
#Ordered numbering.
t.test(jan, aug, alternative = "two.sided")
t.test(jan, aug, alternative = "greater")
t.test(jan, aug, alternative = "less")
#Regularity Test - shapiro test
jan <- dust_data_soup$Fine.dust[dust_data_soup$month == '01']
shapiro.test(jan)
aug <- dust_data_soup$Fine.dust[dust_data_soup$month == '08']
shapiro.test(aug)
#Q-Q plot(Quantile)
qqnorm(jan)
qqline(jan, lty=1, col="blue")
qqnorm(aug)
qqline(aug, lty = 1, col = 'red')
#Ordered numbering.
t.test(jan, aug, alternative = "two.sided")
t.test(jan, aug, alternative = "greater")
t.test(jan, aug, alternative = "less")
#
#Ordered numbering.
t.test(jan, aug, alternative = "two.sided")
t.test(jan, aug, alternative = "greater")
t.test(jan, aug, alternative = "less")
library(gmodels)
month <- dust_data_soup$month
finedust <- dust_data_soup$Fine.dust2
table(month, finedust)
prop.table(month, finedust)
prop.table(table(month, finedust))
library(gmodels)
month <- dust_data_soup$month
finedust <- dust_data_soup$Fine.dust2
table(month, finedust)
prop.table(table(month, finedust))
CrossTable(month, finedust, chisq = TRUE)
prop.table(table(month, finedust), margin = 1)
prop.table(table(month, finedust), margin = 1)*100
table(month, finedust)
prop.table(table(month, finedust), margin = 1)*100
library(gmodels)
month <- dust_data_soup$month
finedust <- dust_data_soup$Fine.dust2
table(month, finedust)
prop.table(table(month, finedust), margin = 1)*100
CrossTable(month, finedust, chisq = TRUE)
table(month, finedust)
prop.table(table(month, finedust), margin = 1)*100
chisq.test(month, finedust)
library(gmodels)
month <- dust_data_soup$month
finedust <- dust_data_soup$Fine.dust2
table(month, finedust)
prop.table(table(month, finedust), margin = 1)*100
chisq.test(month, finedust)
CrossTable(month, finedust, chisq = TRUE)
table(month, finedust)
prop.table(table(month, finedust), margin = 1)*100
chisq.test(month, finedust)
#load data. Used opendata in seoul-si
#level of finedust by month, localarea
dust_data <- read.csv("./dust_seoul.csv", header = TRUE)
head(dust_data)
summary(dust_data)
#Extract monthly info into the month column (substr())
dust_data$month <- substr(dust_data[,1], 5,6)
unique(dust_data$month)
names(dust_data) <- c("date","station","Co2.ppm", "Ozone.ppm", "Co.ppm", "SO3.ppm", "Fine.dust", "Ultrafine.dust","month")
#filter by month for 01, 08 (%in%)
dust_data_18 <- subset(dust_data, dust_data$month %in% c('01', '08') )
length(dust_data_18)
dust_data_18
dust_data_soup <- dust_data_18[,c("month","Fine.dust","Ultrafine.dust")]
dust_data_soup <- na.omit(dust_data_soup)
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust <=30] <- 'good'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=31 & dust_data_soup$Fine.dust <=80] <- 'normal'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=81 & dust_data_soup$Fine.dust <=150] <- 'bad'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=151 ] <- 'bad'
dust_data_soup
library(gmodels)
month <- dust_data_soup$month
finedust <- dust_data_soup$Fine.dust2
table(month, finedust)
prop.table(table(month, finedust), margin = 1)*100
chisq.test(month, finedust)
CrossTable(month, finedust, chisq = TRUE)
#Regularity Test - shapiro test
jan <- dust_data_soup$Fine.dust[dust_data_soup$month == '01']
shapiro.test(jan)
aug <- dust_data_soup$Fine.dust[dust_data_soup$month == '08']
shapiro.test(aug)
#Q-Q plot(Quantile)
qqnorm(jan)
qqline(jan, lty=1, col="blue")
qqnorm(aug)
qqline(aug, lty = 1, col = 'red')
#
#Ordered numbering.
t.test(jan, aug, alternative = "two.sided")
t.test(jan, aug, alternative = "greater")
t.test(jan, aug, alternative = "less")
jan <- dust_data_soup$Fine.dust[dust_data_soup$month == '01']
shapiro.test(jan)
aug <- dust_data_soup$Fine.dust[dust_data_soup$month == '08']
shapiro.test(aug)
ja
jan
hist(jan)
hist(aug)
shapiro.test(aug)
mean(aug)
median(aug)
qqplot(aug)
qqnorm(aug)
shapiro.test(aug)
shapiro.test(rnorm(100,mean=5, sd = 3))
shapiro.test(runif(100,min=2, max = 4))
shapiro.test(jan[:100])
shapiro.test(jan[1:100])
shapiro.test(jan[1:10])
hist(jan[1:10])
shapiro.test(jan[1:50])
hist(jan)
jan
dust_data_soup
hist(dust_data_soup$Fine.dust2)
barplot(dust_data_soup$Fine.dust2)
barplot(dust_data_soup$Fine.dust2)
dust_data_soup$Fine.dust2
barplot(na.omit(dust_data_soup$Fine.dust2))
pie(na.omit(dust_data_soup$Fine.dust2))
plot(na.omit(dust_data_soup$Fine.dust2))
plot(na.omit(dust_data_soup$Fine.dust2))
barplot(na.omit(dust_data_soup$Fine.dust2))
barplot(jan)
as.numeric(dust_data_soup$Fine.dust2)
as.factor(dust_data_soup$Fine.dust2)
barplot(as.factor(dust_data_soup$Fine.dust2))
barplot(as.numeric(as.factor(dust_data_soup$Fine.dust2)))
table(dust_data_soup$fine.dust2)
table(as.factor(dust_data_soup$fine.dust2))
as.factor(dust_data_soup$fine.dust2)
as.factor(dust_data_soup$Fine.dust2)
table(as.factor(dust_data_soup$Fine.dust2))
barplot(table(as.factor(dust_data_soup$Fine.dust2)))
pie(table(as.factor(dust_data_soup$Fine.dust2)))
abc <- factor(level=c(1,2,3), labels = c('good','normal','bad'))
abc
abc <-c(1,2,3,4,5)
abc
type(abc
)
typeof(abc)
abc <- factor(level=c(1,2,3), labels = c('good','normal','bad'))
abc[1] <- 1
abc
abc[1] <- 'good'
abc[1] <- 'good'
abc
#load data. Used opendata in seoul-si
#level of finedust by month, localarea
dust_data <- read.csv("./dust_seoul.csv", header = TRUE)
head(dust_data)
summary(dust_data)
#Extract monthly info into the month column (substr())
dust_data$month <- substr(dust_data[,1], 5,6)
unique(dust_data$month)
names(dust_data) <- c("date","station","Co2.ppm", "Ozone.ppm", "Co.ppm", "SO3.ppm", "Fine.dust", "Ultrafine.dust","month")
#filter by month for 01, 08 (%in%)
dust_data_18 <- subset(dust_data, dust_data$month %in% c('01', '08') )
length(dust_data_18)
dust_data_18
dust_data_soup <- dust_data_18[,c("month","Fine.dust","Ultrafine.dust")]
dust_data_soup <- na.omit(dust_data_soup)
dust_data_soup$Fine.dust2 <- factor(levels = c(1,2,3), labels = c('good','normal','bad'))
dust_data_soup <- dust_data_18[,c("month","Fine.dust","Ultrafine.dust")]
dust_data_soup <- na.omit(dust_data_soup)
dust_data_soup$Fine.dust2 <- factor(levels = c(1,2,3), labels = c('good','normal','bad'))
dust_data_soup$Fine.dust2 <- factor(NA, levels = c(1,2,3), labels = c('good','normal','bad'))
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust <=30] <- 'good'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=31 & dust_data_soup$Fine.dust <=80] <- 'normal'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=81 & dust_data_soup$Fine.dust <=150] <- 'bad'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=151 ] <- 'bad'
pie(dust_data_soup$Fine.dust2)
pie(table(dust_data_soup$Fine.dust2))
pie(table(dust_data_soup$month, dust_data_soup$Fine.dust2))
pie(table(dust_data_soup$Fine.dust2))
dust_data_soup <- dust_data_18[,c("month","Fine.dust","Ultrafine.dust")]
dust_data_soup <- na.omit(dust_data_soup)
dust_data_soup$Fine.dust2 <- factor(NA, levels = c(1,2,3), labels = c('good','normal','bad'))
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust <=30] <- 'good'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=31 & dust_data_soup$Fine.dust <=80] <- 'normal'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=81 & dust_data_soup$Fine.dust <=150] <- 'bad'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=151 ] <- 'bad'
dust_data_soup
pie(table(dust_data_soup$Fine.dust2))
library(gmodels)
month <- dust_data_soup$month
finedust <- dust_data_soup$Fine.dust2
table(month, finedust)
prop.table(table(month, finedust), margin = 1)*100
chisq.test(month, finedust)
CrossTable(month, finedust, chisq = TRUE)
chart_data <- round(runif(10,100,1000))
chart_data
names(chart_data) <- c("2014-1","2015-1","2014-2", "2015-2","2014-3","2015-3","2014-4","2015-4")
names(chart_data) <- c("2014-1","2015-1","2014-2", "2015-2","2014-3","2015-3","2014-4","2015-4","2017-3","2017-2")
chart_data
pie(chart_data)
barplot(chart_data)
help(barplot)
barplot(chart_data, ylim=c(0,600), ylab = "Sales(won)", xlab = "Quarterly",col = rainbow(8), main= "Quarterly Sales Comp")
barplot(chart_data, ylim = autoload())
library(scatterplot3d)
levels(iris$Species)
iris_setosa<- iris[iris$Species == 'setosa',]
iris_versicolor <- iris[iris$Species == 'versicolor',]
iris_virginica <- iris[iris$Species == 'virginica',]
library(scatterplot3d)
levels(iris$Species)
iris_setosa<- iris[iris$Species == 'setosa',]
iris_versicolor <- iris[iris$Species == 'versicolor',]
iris_virginica <- iris[iris$Species == 'virginica',]
d3<- scatterplot3d(iris$Petal.Length, iris$Sepal.Length, iris$Sepal.Width, type = 'n')
d3$points3d(iris_setosa$Petal.Length, iris_setosa$Sepal.Length, iris_setosa$Sepal.Width, bg = 'orange', pch = 21)
d3$points3d(iris_versicolor$Petal.Length, iris_versicolor$Sepal.Length, iris_versicolor$Sepal.Width, bg = 'blue', pch = 23)
d3$points3d(iris_virginica$Petal.Length, iris_virginica$Sepal.Length, iris_virginica$Sepal.Width, bg = 'green', pch = 25)
d3<- scatterplot3d(iris$Petal.Length, iris$Sepal.Length, iris$Sepal.Width, type = 'l')
d3<- scatterplot3d(iris$Petal.Length, iris$Sepal.Length, iris$Sepal.Width, type = 'o')
d3<- scatterplot3d(iris$Petal.Length, iris$Sepal.Length, iris$Sepal.Width)
d3$points3d(1:5,1:5,1:5)
d3<- scatterplot3d(iris$Petal.Length, iris$Sepal.Length, iris$Sepal.Width)
d3$points3d(1:5,1:5,1:5)
d3<- scatterplot3d(iris$Petal.Length, iris$Sepal.Length, iris$Sepal.Width)
d3<- scatterplot3d(iris$Petal.Length, iris$Sepal.Length, iris$Sepal.Width)
d3$points3d(1:5,1:5,1:5, bg = 'orange', pch = 21)
d3<- scatterplot3d()
d3<- scatterplot3d(type = 'n')
d3<- scatterplot3d(iris$Petal.Length, iris$Sepal.Length, iris$Sepal.Width)
#d3$points3d(1:5,1:5,1:5, bg = 'orange', pch = 21)
d3$points3d(iris_setosa$Petal.Length, iris_setosa$Sepal.Length, iris_setosa$Sepal.Width, bg = 'orange', pch = 21)
d3$points3d(iris_versicolor$Petal.Length, iris_versicolor$Sepal.Length, iris_versicolor$Sepal.Width, bg = 'blue', pch = 23)
d3$points3d(iris_virginica$Petal.Length, iris_virginica$Sepal.Length, iris_virginica$Sepal.Width, bg = 'green', pch = 25)
library(scatterplot3d)
levels(iris$Species)
iris_setosa<- iris[iris$Species == 'setosa',]
iris_versicolor <- iris[iris$Species == 'versicolor',]
iris_virginica <- iris[iris$Species == 'virginica',]
d3<- scatterplot3d(iris$Petal.Length, iris$Sepal.Length, iris$Sepal.Width)
#d3$points3d(1:5,1:5,1:5, bg = 'orange', pch = 21)
d3$points3d(iris_setosa$Petal.Length, iris_setosa$Sepal.Length, iris_setosa$Sepal.Width, bg = 'orange', pch = 21)
d3$points3d(iris_versicolor$Petal.Length, iris_versicolor$Sepal.Length, iris_versicolor$Sepal.Width, bg = 'blue', pch = 23)
d3$points3d(iris_virginica$Petal.Length, iris_virginica$Sepal.Length, iris_virginica$Sepal.Width, bg = 'green', pch = 25)
d3$points3d(iris_setosa$Petal.Length, iris_setosa$Sepal.Length, iris_setosa$Sepal.Width, bg = 'orange', pch = 21)
d3$points3d(iris_versicolor$Petal.Length, iris_versicolor$Sepal.Length, iris_versicolor$Sepal.Width, bg = 'blue', pch = 23)
d3$points3d(iris_virginica$Petal.Length, iris_virginica$Sepal.Length, iris_virginica$Sepal.Width, bg = 'green', pch = 25)
d3$points3d(iris_setosa$Petal.Length, iris_setosa$Sepal.Length, iris_setosa$Sepal.Width, bg = 'orange', pch = 21)
d3$points3d(iris_versicolor$Petal.Length, iris_versicolor$Sepal.Length, iris_versicolor$Sepal.Width, bg = 'blue', pch = 23)
d3$points3d(iris_virginica$Petal.Length, iris_virginica$Sepal.Length, iris_virginica$Sepal.Width, bg = 'green', pch = 25)
d3$points3d(iris_setosa$Petal.Length, iris_setosa$Sepal.Length, iris_setosa$Sepal.Width, bg = 'orange', pch = 21)
d3$points3d(iris_versicolor$Petal.Length, iris_versicolor$Sepal.Length, iris_versicolor$Sepal.Width, bg = 'blue', pch = 23)
d3$points3d(iris_virginica$Petal.Length, iris_virginica$Sepal.Length, iris_virginica$Sepal.Width, bg = 'green', pch = 25)
d3$points3d(iris_setosa$Petal.Length, iris_setosa$Sepal.Length, iris_setosa$Sepal.Width, bg = 'orange', pch = 21)
d3$points3d(iris_versicolor$Petal.Length, iris_versicolor$Sepal.Length, iris_versicolor$Sepal.Width, bg = 'blue', pch = 23)
d3$points3d(iris_virginica$Petal.Length, iris_virginica$Sepal.Length, iris_virginica$Sepal.Width, bg = 'green', pch = 25)
library(scatterplot3d)
levels(iris$Species)
iris_setosa<- iris[iris$Species == 'setosa',]
iris_versicolor <- iris[iris$Species == 'versicolor',]
iris_virginica <- iris[iris$Species == 'virginica',]
d3<- scatterplot3d(iris$Petal.Length, iris$Sepal.Length, iris$Sepal.Width)
#d3$points3d(1:5,1:5,1:5, bg = 'orange', pch = 21)
d3$points3d(iris_setosa$Petal.Length, iris_setosa$Sepal.Length, iris_setosa$Sepal.Width, bg = 'orange', pch = 21)
d3$points3d(iris_versicolor$Petal.Length, iris_versicolor$Sepal.Length, iris_versicolor$Sepal.Width, bg = 'blue', pch = 23)
d3$points3d(iris_virginica$Petal.Length, iris_virginica$Sepal.Length, iris_virginica$Sepal.Width, bg = 'green', pch = 25)
library(scatterplot3d)
levels(iris$Species)
iris_setosa<- iris[iris$Species == 'setosa',]
iris_versicolor <- iris[iris$Species == 'versicolor',]
iris_virginica <- iris[iris$Species == 'virginica',]
d3<- scatterplot3d(iris$Petal.Length, iris$Sepal.Length, iris$Sepal.Width, type = 'n')
#d3$points3d(1:5,1:5,1:5, bg = 'orange', pch = 21)
d3$points3d(iris_setosa$Petal.Length, iris_setosa$Sepal.Length, iris_setosa$Sepal.Width, bg = 'orange', pch = 21)
d3$points3d(iris_versicolor$Petal.Length, iris_versicolor$Sepal.Length, iris_versicolor$Sepal.Width, bg = 'blue', pch = 23)
d3$points3d(iris_virginica$Petal.Length, iris_virginica$Sepal.Length, iris_virginica$Sepal.Width, bg = 'green', pch = 25)
install.packages('plyr')
x = data.frame(id = c(1,2,3,4,5), height = c(160, 171, 173, 162, 165))
library(plyr)
x = data.frame(id = c(1,2,3,4,5), height = c(160, 171, 173, 162, 165))
y = data.frame(id = c(5,4,1,3,2), weight = c(55, 73, 60, 57, 80))
join <- join(x, y, by = 'id')
join
x<- data.frame(id = c(1:5), height = round(rand(5, 100,200)))
x<- data.frame(id = c(1:5), height = round(randn(5, 100,200)))
x<- data.frame(id = c(1:5), height = round(norm(5, 100,200)))
x<- data.frame(id = c(1:5), height = round(rnorm(5, 100,200)))
y<- data.frame(id = c(1:5), height = round(rnorm(4, 100, 200)))
x<- data.frame(id = c(1:6), height = round(rnorm(6, 100,200)))
y<- data.frame(id = c(1:5), height = round(rnorm(5, 100, 200)))
x<- data.frame(id = c(1:6), height = round(rnorm(6, 100,200)))
y<- data.frame(id = c(1:5), height = round(rnorm(5, 100, 200)))
join(x, y , by = 'id')
x<- data.frame(id = c(1:6), height = round(rnorm(6, 100,200)))
y<- data.frame(id = c(1:5), weight = round(rnorm(5, 100, 200)))
join(x, y , by = 'id')
x<- data.frame(id = c(1:6), height = round(rnorm(6, 100,200)))
y<- data.frame(id = c(1:5), weight = round(rnorm(5, 100, 200)))
join(x, y , by = 'id')
x<- data.frame(id = c(2:6), height = round(rnorm(5, 100,200)))
y<- data.frame(id = c(1:5), height = round(rnorm(5, 100,200)))
join(x, y, by = 'id', type = 'inner')
join(x, y, by = 'id', type = 'full')
join(x, y, by = 'id', type = 'full')
x<- data.frame(id = c(2:6), height = round(rnorm(5, 100,200)))
y<- data.frame(id = c(1:5), weight = round(rnorm(5, 100,200)))
join(x, y, by = 'id', type = 'inner')
x<- data.frame(id = c(2:6), height = round(rnorm(5, 100,200)))
y<- data.frame(id = c(1:5), weight = round(rnorm(5, 100,200)))
join(x, y, by = 'id', type = 'full')
x<- data.frame(key1 = c(1,1,2,2,3), key2= c('a', 'b', 'c', 'd', 'e'), val1 = c(10,20,30,40,50) )
y<- data.frame(key1 = c(3,2,2,1,1), key2= c('e', 'd', 'c', 'b', 'a'), val1 = c(500,400,300,200,100))
xy <- join(x, y, by = c('key1','key2') )
xy
x<- data.frame(key1 = c(1,1,2,2,3), key2= c('a', 'b', 'c', 'd', 'e'), val1 = c(10,20,30,40,50) )
y<- data.frame(key1 = c(3,2,2,1,1), key2= c('e', 'd', 'c', 'b', 'a'), val1 = c(500,400,300,200,100))
xy <- join(x, y, by = c('key1','key2') )
xy
head(iris)
names(iris)
unique(iris$Species)
tapply(iris$Sepal.Length, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, sd)
avg_df<-ddply(iris, .(Species), summarise, avg = mean(sepal.length))
avg_df<-ddply(iris, .(Species), summarise, avg = mean(Sepal.Length))
avg_df
str(avg_df)
read.csv('./kaggle/titanic/train.csv', header = TRUE)
read.csv('./kaggle/titanic/train.csv', header = TRUE)
train <- read.csv('./kaggle/titanic/train.csv', header = TRUE)
head(train)
names(train)
class(train)
test <- read.csv('./kaggle/titanic/test.csv', header = TRUE)
head(test)
names(test)
library(PerformanceAnalytics)
na.omit(fare)
pclass <- train$Pclass
fare <- train$Fare
cor(pclass, fare, method="spearman")
hist(pclass)
hist(fare)
boxplot(fare)
unique(train$Embarked)
unique(train$Parch)
hist(train$Parch)
table(train$Parch)
table(train$SibSp)
table(c(train$Survived,train$SibSp))
table(train[c(Survived,SibSp)]
]
table(train[c(Survived,SibSp)])
table(train[c('Survived','SibSp')])
table(train[c('Survived','SibSp', 'Parch')])
table(train[c('Survived','SibSp')])
table(train[c('SibSp','Survived')])
