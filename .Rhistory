data2<- subset(data, score<= 14 ) # remove larger than 14.
length(data2$score)
x<- data2$score
plot(x)
barplot(x)
boxplot(x)
mean(x) ; median(x); quantile(x)
data2$method2[data2$method == 1] <- "method1"
data2$method2[data2$method == 2] <- "method2"
data2$method2[data2$method == 3] <- "method3"
x<-table(data2$method2)
x
y<- tapply(data2$score, data2$method, mean)
y
df<- data.frame(method=x, score=y)
df
# bartlett.test / homogeneity of Variances.
bartlett.test( score ~ method, data = data2)
result <- aov(score ~ method2, data = data2)
names(result)
result
summary(result)
data2$method2[data2$method == 1] <- "method1"
data2$method2[data2$method == 2] <- "method2"
data2$method2[data2$method == 3] <- "method3"
x<-table(data2$method2)
x
y<- tapply(data2$score, data2$method, mean)
y
df<- data.frame(method=x, score=y)
df
# bartlett.test / homogeneity of Variances.
bartlett.test( score ~ method, data = data2)
result <- aov(score ~ method2, data = data2)
names(result)
result
summary(result)
data2$method2[data2$method == 1] <- "method1"
data2$method2[data2$method == 2] <- "method2"
data2$method2[data2$method == 3] <- "method3"
x<-table(data2$method2)
x
y<- tapply(data2$score, data2$method, mean)
y
df<- data.frame(method=x, score=y)
df
# bartlett.test / homogeneity of Variances.
bartlett.test( score ~ method, data = data2)
result <- aov(score ~ method2, data = data2)
names(result)
result
summary(result)
data2$method2[data2$method == 1] <- "method1"
data2$method2[data2$method == 2] <- "method2"
data2$method2[data2$method == 3] <- "method3"
x<-table(data2$method2)
x
y<- tapply(data2$score, data2$method, mean)
y
df<- data.frame(method=x, score=y)
df
# bartlett.test / homogeneity of Variances.
bartlett.test( score ~ method, data = data2)
result <- aov(score ~ method2, data = data2)
names(result)
result
summary(result)
# Three sample - test
#H0. No difference between three samples
data<- read.csv("./R/Basic/Part-III/three_sample.csv", header = TRUE)
head(data)
method<- data$method
survey<- data$survey
method; survey
table(method, useNA='ifany') #count samples for each group
table(method, survey, useNA="ifany") # count samples for each group with survey response.
#Three group ratio difference test(chi-square)
prop.test(c(34,37,39),c(50,50,50))
prop.test(c(34,37,39),c(50,50,50), alternative = "two.sided", conf.level = 0.95)
#p-val -> 0.52 > 0.05, we cannot discard the result.
# X-sqaured discard value : 5.991(df = 2, a = 0.95) > 1.2944(statistic, X-squared)
#Variance Analysis ( F-test)
#ANOVA Analysis
data<- read.csv("./R/Basic/Part-III/three_sample.csv", header = TRUE)
head(data)
data<- subset(data, !is.na(score), c(method, score))
head(data)
plot(data$score)
barplot(data$score)
boxplot(data$score)
mean(data$score); median(data$score);quantile(data$score)
#There is outlier that is much larger than ususal values
length(data$score)
data2<- subset(data, score<= 14 ) # remove larger than 14.
length(data2$score)
x<- data2$score
plot(x)
barplot(x)
boxplot(x)
mean(x) ; median(x); quantile(x)
data2$method2[data2$method == 1] <- "method1"
data2$method2[data2$method == 2] <- "method2"
data2$method2[data2$method == 3] <- "method3"
x<-table(data2$method2)
x
y<- tapply(data2$score, data2$method, mean)
y
df<- data.frame(method=x, score=y)
df
# bartlett.test / homogeneity of Variances.
bartlett.test( score ~ method, data = data2)
result <- aov(score ~ method2, data = data2)
names(result)
result
summary(result)
data2$method2[data2$method == 1] <- "method1"
data2$method2[data2$method == 2] <- "method2"
data2$method2[data2$method == 3] <- "method3"
data2$method2[data2$method == 1] <- "method1"
data2$method2[data2$method == 2] <- "method2"
data2$method2[data2$method == 3] <- "method3"
x<-table(data2$method2)
x
y<- tapply(data2$score, data2$method, mean)
y
data2$method2[data2$method == 1] <- "method1"
data2$method2[data2$method == 2] <- "method2"
data2$method2[data2$method == 3] <- "method3"
x<-table(data2$method2)
x
y<- tapply(data2$score, data2$method, mean)
y
df<- data.frame(method=x, score=y)
df
data2$method2[data2$method == 1] <- "method1"
data2$method2[data2$method == 2] <- "method2"
data2$method2[data2$method == 3] <- "method3"
x<-table(data2$method2)
x
y<- tapply(data2$score, data2$method, mean)
y
df<- data.frame(method=x, score=y)
# bartlett.test / homogeneity of Variances.
bartlett.test( score ~ method, data = data2)
result <- aov(score ~ method2, data = data2)
names(result)
result
summary(result)
df<- data.frame(method=x, score=y)
# bartlett.test / homogeneity of Variances.
bartlett.test( score ~ method, data = data2)
df
result <- aov(score ~ method2, data = data2)
names(result)
result
summary(result)
df<- data.frame(method=x, score=y)
# bartlett.test / homogeneity of Variances.
bartlett.test( score ~ method, data = data2)
result <- aov(score ~ method2, data = data2)
names(result)
result
summary(result)
df<- data.frame(method=x, score=y)
# bartlett.test / homogeneity of Variances.
print (df)
bartlett.test( score ~ method, data = data2)
result <- aov(score ~ method2, data = data2)
names(result)
result
summary(result)
df<- data.frame(method=x, score=y)
#df # produce error while saving in notebook!
# bartlett.test / homogeneity of Variances.
bartlett.test( score ~ method, data = data2)
result <- aov(score ~ method2, data = data2)
names(result)
result
summary(result)
TukeyHSD(result)
plot(TukeyHSD(result))
#Convert Nominal stats and Ordinal stats into numerically gauagable form
#Contingency table(Cross table)
#Count its frequency for each Nominal category
data<- rea.csv("./R/Basic/Part-III/cleanDescriptive.csv", header = TRUE)
#Convert Nominal stats and Ordinal stats into numerically gauagable form
#Contingency table(Cross table)
#Count its frequency for each Nominal category
data<- read.csv("./R/Basic/Part-III/cleanDescriptive.csv", header = TRUE)
data<- read.csv("./R/Basic/Part-III/cleanDescriptive.csv", header = TRUE, encoding = "CP-949")
data<- read.csv("./R/Basic/Part-III/cleanDescriptive.csv", header = TRUE, encoding = "UTF-8")
data<- read.csv("./R/Basic/Part-III/cleanDescriptive.csv", header = TRUE, encoding = "UTF-8")
data<- read.csv("./R/Basic/Part-III/cleanDescriptive.csv", header = TRUE, encoding = "CP949")
data<- read.csv("./R/Basic/Part-III/cleanDescriptive.csv", header = TRUE, encoding = "CP-949")
data<- read.csv("./R/Basic/Part-III/cleanDescriptive.csv", header = TRUE, encoding="CP949")
data<- read.csv("./R/Basic/Part-III/cleanDescriptive.csv", header = TRUE, fileEncoding = "CP949")
data
#Convert Nominal stats and Ordinal stats into numerically gauagable form
#Contingency table(Cross table)
#Count its frequency for each Nominal category
data<- read.csv("./R/Basic/Part-III/cleanDescriptive.csv", header = TRUE, fileEncoding = "CP949")
data
head(data)
x<- data$level2
y<- data$pass2
result <- data.frame(Level=x, Pass=y)
dim(result)
table(result)
install.packages('gmodels')
install.packages("ggplot2")
#install.packages('gmodels')
#install.packages('ggplot2')
library(gmodels)
library(ggplot2)
#Use Example dataset inside the ggplo2 package
CrossTable(x = diamonds$color, y = diamonds$cut)
CrossTable(x, y)
CrossTable(x = diamonds$cut, y=diamonds$color, chisq= TRUE)
CrossTable(x, y, chisq = TRUE)
data <- read.csv('./R/Basic/Part-III/homogenity.csv', header = TRUE)
data <- subset(data, !is.na(survey), c(method, survey)
data <- read.csv('./R/Basic/Part-III/homogenity.csv', header = TRUE)
data <- read.csv('./R/Basic/Part-III/homogenity.csv', header = TRUE)
data <- read.csv('./R/Basic/Part-III/homogenity.csv', header = TRUE)
head(data)
data <- subset(data, !is.na(survey), c(method, survey))
#field method 2
data$method2[data$method ==1] <- "method1"
data$method2[data$method ==2] <- "method2"
data$method2[data$method ==3] <- "method3"
#field survey
data$survey2[data$survey == 1] <- "very good"
data$survey2[data$survey == 2] <- "good"
data$survey2[data$survey == 3] <- "soso"
data$survey2[data$survey == 4] <- "poor"
data$survey2[data$survey == 5] <- "very poor"
table(data$method2, data$survey2)
chisq.test(data$method2, data$survey2)
data("airmiles")
airmiles
plot(airmiles)
data("AirPassengers")
plot(AirPassengers)
AirPassengers
class(AirPassengers)
as.vector(AirPassengers)
attributes(AirPassengers)
data(airquality)
airquality
read.csv("./dust_seoul.csv", header = TRUE)
dust_data <- read.csv("./dust_seoul.csv", header = TRUE)
source('~/Rdata/R-miniproject.R', echo=TRUE)
dust_data[,1]
substr("20170613", 5,6)
dust_data$month <- substr(dust_data[,1], 5,6)
dust_data$month
unique(dust_data$month)
dust_data_18 <- subset(dust_data, dust_data$month == ('01' || '08') )
dust_data_18 <- subset(dust_data, dust_data$month %in% c('01', '08') )
length(dust_data_18)
length(dust_dat)
length(dust_data)
dust_data
length(dust_data)
nrow(dust_dat)
nrow(dust_data)
nrow(dust_data_18)
2418*6
dust_data_18
summary(dust_data_18[,c(8,9)])
summary(dust_data_18[,c(7,8)])
product<- read.csv("./R/Basic/Part-IV/product.csv", header = TRUE )
product<- read.csv("./R/Basic/Part-IV/product.csv", header = TRUE )
str(product)
y <- product$Satisfaction
x <- product$Proper
dataf<- data.frame(x, y)
result.lm <- lm(formula = y ~ x, data = dataf)
product<- read.csv("./R/Basic/Part-IV/product.csv", header = TRUE )
str(product)
y <- product$Satisfaction
x <- product$Proper
dataf<- data.frame(x, y)
result.lm <- lm(formula = y ~ x, data = dataf)
result.lm
product<- read.csv("./R/Basic/Part-IV/product.csv", header = TRUE )
str(product)
y <- product$Satisfaction
x <- product$Proper
dataf<- data.frame(x, y)
result.lm <- lm(formula = y ~ x, data = dataf)
plot(result.lm)
class(x)
class(y)
names(result.lm)
result.lm$fitted.values
y
length(y)
length(result.lm$fitted.values)
head(dataf, 1)
residuals(result.lm)
histogram(result.lm$residuals)
result.lm$residuals
plot(result.lm$residuals)
histogram(result.lm$residuals)
histm(result.lm$residuals)
hist(result.lm$residuals)
shapiro.test(result.lm$residuals)
plot(formula = y~x, data = result.lm)
plot(formula = y~x, data = result)
result
plot(formula = y~x)
result.lm <- lm(formula = y ~ x, data = result)
abline(result.lm, col='red')
result.lm <- lm(formula = y ~ x, data = result)
plot(formula = y~x)
abline(result.lm, col='red')
summary(result.lm)
source('~/Rdata/R-miniproject.R', echo=TRUE)
names(dust_data_18)
names(dust_data_18) <- c("date","station","Co2.ppm", "Ozone.ppm", "Co.ppm", "SO3.ppm", "Fine.dust", "Ultrafine.dust","month")
dust_data_18[,c("Fine.dust","Ultrafine.dust")]
dust_data_soup <- dust_data_18[,c("Fine.dust","Ultrafine.dust")]
dust_data_soup
dust_data_soup <- dust_data_18[,c("month","Fine.dust","Ultrafine.dust")]
dust_data_soup
table(dust_data_soup)
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=0 & dust_data_soup$Fine.dust <=30] <- 'good'
names(dust_data_18) <- c("date","station","Co2.ppm", "Ozone.ppm", "Co.ppm", "SO3.ppm", "Fine.dust", "Ultrafine.dust","month")dust
dust_data_soup
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=31 & dust_data_soup$Fine.dust <=80] <- 'normal'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust <=30] <- 'good'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=31 & dust_data_soup$Fine.dust <=80] <- 'normal'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=81 & dust_data_soup$Fine.dust <=150] <- 'good'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=151 ] <- 'good'
dust_data_soup
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=81 & dust_data_soup$Fine.dust <=150] <- 'bad'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=151 ] <- 'very bad'
dust_data_soup
hist(dust_data_soup$Fine.dust2)
plot(dust_data_soup$Fine.dust2)
dust_data_soup$Fine.dust2
hist(as.numeric(dust_data_soup$Fine.dust2))
table(dust_data_soup$month, dust_data_soup$Fine.dust2)
dust_data_soup <- dust_data_18[,c("month","Fine.dust","Ultrafine.dust")]
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust <=30] <- 'good'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=31 & dust_data_soup$Fine.dust <=80] <- 'normal'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=81 & dust_data_soup$Fine.dust <=150] <- 'bad'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=151 ] <- 'very bad'
dust_data_soup
table(dust_data_soup$month, dust_data_soup$Fine.dust2)
plot(dust_data_soup[dust_data_soup$month=='01'])
plot(dust_data_soup[dust_data_soup$month == '01'])
dust_data_soup$month == '01'
plot(dust_data_soup$Fine.dust[dust_data_soup$month == '01'])
hist(dust_data_soup$Fine.dust[dust_data_soup$month == '01'])
hist(dust_data_soup$Fine.dust[dust_data_soup$month == '08'])
hist(dust_data_soup$Fine.dust[dust_data_soup$month == '01'])
hist(dust_data_soup$Fine.dust[dust_data_soup$month == '08'])
hist(dust_data_soup$Fine.dust[dust_data_soup$month == '01'])
hist(dust_data_soup$Fine.dust[dust_data_soup$month == '08'])
hist(dust_data_soup$Fine.dust[dust_data_soup$month == '01'])
hist(dust_data_soup$Fine.dust[dust_data_soup$month == '08'])
hist(dust_data_soup$Fine.dust[dust_data_soup$month == '01'])
shapiro.test(dust_data_soup$Fine.dust[dust_data_soup$month == '01'])
shapiro.test(dust_data_soup$Fine.dust[dust_data_soup$month == '08'])
t.test(dust_data_soup$Fine.dust[dust_data_soup$month == '01'], dust_data_soup$Fine.dust[dust_data_soup$month == '08'], alternative = "two.sided")
jan <- dust_data_soup$Fine.dust[dust_data_soup$month == '01']
shapiro.test(jan)
aug <- dust_data_soup$Fine.dust[dust_data_soup$month == '08']
shapiro.test(aug)
t.test(jan, aug, alternative = "two.sided")
t.test(jan, aug, alternative = "greter")
t.test(jan, aug, alternative = "greater")
t.test(jan, aug, alternative = "less")
CrossTable(dust_data_soup$month, dust_data_soup$Fine.dust2, chisq = TRUE)
library(gmodels)
CrossTable(dust_data_soup$month, dust_data_soup$Fine.dust2, chisq = TRUE)
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust <=30] <- 'good'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=31 & dust_data_soup$Fine.dust <=80] <- 'normal'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=81 & dust_data_soup$Fine.dust <=150] <- 'bad'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=151 ] <- 'bad'
CrossTable(dust_data_soup$month, dust_data_soup$Fine.dust2, chisq = TRUE)
month <- dust_data_soup$month
finedust<- dust_data_soup$Fine.dust2
CrossTable(month, finedist, chisq = TRUE)
CrossTable(month, finedust, chisq = TRUE)
table(month, finedust)
CrossTable(month, finedust, chisq = TRUE)
dust_data_soup
is.na(dust_data_soup)
count(is.na(dust_data_soup))
sum(is.na(dust_data_soup))
dust_data_soup <- na.omit(dust_data_soup)
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust <=30] <- 'good'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=31 & dust_data_soup$Fine.dust <=80] <- 'normal'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=81 & dust_data_soup$Fine.dust <=150] <- 'bad'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=151 ] <- 'bad'
dust_data_soup
table(dust_data_soup$month, dust_data_soup$Fine.dust2)
jan <- dust_data_soup$Fine.dust[dust_data_soup$month == '01']
shapiro.test(jan)
aug <- dust_data_soup$Fine.dust[dust_data_soup$month == '08']
shapiro.test(aug)
t.test(jan, aug, alternative = "two.sided")
t.test(jan, aug, alternative = "greater")
t.test(jan, aug, alternative = "less")
library(gmodels)
month <- dust_data_soup$month
finedust<- dust_data_soup$Fine.dust2
table(month, finedust)
CrossTable(month, finedust, chisq = TRUE)
hist(dust_data_soup$Fine.dust[dust_data_soup$month=='01'])
hist(dust_data_soup$Fine.dust[dust_data_soup$month=='08'])
dust_data <- read.csv("./dust_seoul.csv", header = TRUE)
head(dust_data)
summary(dust_data)
#Extract monthly info into the month column (substr())
dust_data$month <- substr(dust_data[,1], 5,6)
unique(dust_data$month)
#filter by month for 01, 08 (%in%)
dust_data_18 <- subset(dust_data, dust_data$month %in% c('01', '08') )
length(dust_data_18)
dust_data_18
names(dust_data_18) <- c("date","station","Co2.ppm", "Ozone.ppm", "Co.ppm", "SO3.ppm", "Fine.dust", "Ultrafine.dust","month")
dust_data_soup <- dust_data_18[,c("month","Fine.dust","Ultrafine.dust")]
dust_data_soup <- na.omit(dust_data_soup)
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust <=30] <- 'good'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=31 & dust_data_soup$Fine.dust <=80] <- 'normal'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=81 & dust_data_soup$Fine.dust <=150] <- 'bad'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=151 ] <- 'bad'
dust_data_soup
table(dust_data_soup$month, dust_data_soup$Fine.dust2)
jan <- dust_data_soup$Fine.dust[dust_data_soup$month == '01']
shapiro.test(jan)
aug <- dust_data_soup$Fine.dust[dust_data_soup$month == '08']
shapiro.test(aug)
t.test(jan, aug, alternative = "two.sided")
t.test(jan, aug, alternative = "greater")
t.test(jan, aug, alternative = "less")
library(gmodels)
month <- dust_data_soup$month
finedust<- dust_data_soup$Fine.dust2
table(month, finedust)
CrossTable(month, finedust, chisq = TRUE)
#load data. Used opendata in seoul-si
#level of finedust by month, localarea
dust_data <- read.csv("./dust_seoul.csv", header = TRUE)
head(dust_data)
summary(dust_data)
#load data. Used opendata in seoul-si
#level of finedust by month, localarea
dust_data <- read.csv("./dust_seoul.csv", header = TRUE)
head(dust_data)
summary(dust_data)
#load data. Used opendata in seoul-si
#level of finedust by month, localarea
dust_data <- read.csv("./dust_seoul.csv", header = TRUE)
head(dust_data)
summary(dust_data)
#Extract monthly info into the month column (substr())
dust_data$month <- substr(dust_data[,1], 5,6)
unique(dust_data$month)
names(dust_data) <- c("date","station","Co2.ppm", "Ozone.ppm", "Co.ppm", "SO3.ppm", "Fine.dust", "Ultrafine.dust","month")
#filter by month for 01, 08 (%in%)
dust_data_18 <- subset(dust_data, dust_data$month %in% c('01', '08') )
length(dust_data_18)
dust_data_18
dust_data_soup <- dust_data_18[,c("month","Fine.dust","Ultrafine.dust")]
dust_data_soup <- na.omit(dust_data_soup)
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust <=30] <- 'good'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=31 & dust_data_soup$Fine.dust <=80] <- 'normal'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=81 & dust_data_soup$Fine.dust <=150] <- 'bad'
dust_data_soup$Fine.dust2[dust_data_soup$Fine.dust >=151 ] <- 'bad'
dust_data_soup
library(gmodels)
month <- dust_data_soup$month
finedust<- dust_data_soup$Fine.dust2
table(month, finedust)
CrossTable(month, finedust, chisq = TRUE)
qqnorm(jan)
qqline(jan, lty=1, col="blue")
qqnorm(aug)
qqline(aug, lty = 1, col = 'red')
jan <- dust_data_soup$Fine.dust[dust_data_soup$month == '01']
shapiro.test(jan)
aug <- dust_data_soup$Fine.dust[dust_data_soup$month == '08']
#Regularity Test
shapiro.test(aug)
#Q-Q plot(Quantile)
qqnorm(jan)
qqline(jan, lty=1, col="blue")
qqnorm(aug)
qqline(aug, lty = 1, col = 'red')
#Ordered numbering.
t.test(jan, aug, alternative = "two.sided")
t.test(jan, aug, alternative = "greater")
t.test(jan, aug, alternative = "less")
#Regularity Test - shapiro test
jan <- dust_data_soup$Fine.dust[dust_data_soup$month == '01']
shapiro.test(jan)
aug <- dust_data_soup$Fine.dust[dust_data_soup$month == '08']
shapiro.test(aug)
#Q-Q plot(Quantile)
qqnorm(jan)
qqline(jan, lty=1, col="blue")
qqnorm(aug)
qqline(aug, lty = 1, col = 'red')
#Ordered numbering.
t.test(jan, aug, alternative = "two.sided")
t.test(jan, aug, alternative = "greater")
t.test(jan, aug, alternative = "less")
